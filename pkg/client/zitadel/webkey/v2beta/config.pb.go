// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: zitadel/resources/webkey/v3alpha/config.proto

package webkey

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebKeyRSAConfig_RSABits int32

const (
	WebKeyRSAConfig_RSA_BITS_UNSPECIFIED WebKeyRSAConfig_RSABits = 0
	WebKeyRSAConfig_RSA_BITS_2048        WebKeyRSAConfig_RSABits = 1
	WebKeyRSAConfig_RSA_BITS_3072        WebKeyRSAConfig_RSABits = 2
	WebKeyRSAConfig_RSA_BITS_4096        WebKeyRSAConfig_RSABits = 3
)

// Enum value maps for WebKeyRSAConfig_RSABits.
var (
	WebKeyRSAConfig_RSABits_name = map[int32]string{
		0: "RSA_BITS_UNSPECIFIED",
		1: "RSA_BITS_2048",
		2: "RSA_BITS_3072",
		3: "RSA_BITS_4096",
	}
	WebKeyRSAConfig_RSABits_value = map[string]int32{
		"RSA_BITS_UNSPECIFIED": 0,
		"RSA_BITS_2048":        1,
		"RSA_BITS_3072":        2,
		"RSA_BITS_4096":        3,
	}
)

func (x WebKeyRSAConfig_RSABits) Enum() *WebKeyRSAConfig_RSABits {
	p := new(WebKeyRSAConfig_RSABits)
	*p = x
	return p
}

func (x WebKeyRSAConfig_RSABits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebKeyRSAConfig_RSABits) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_resources_webkey_v3alpha_config_proto_enumTypes[0].Descriptor()
}

func (WebKeyRSAConfig_RSABits) Type() protoreflect.EnumType {
	return &file_zitadel_resources_webkey_v3alpha_config_proto_enumTypes[0]
}

func (x WebKeyRSAConfig_RSABits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebKeyRSAConfig_RSABits.Descriptor instead.
func (WebKeyRSAConfig_RSABits) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_resources_webkey_v3alpha_config_proto_rawDescGZIP(), []int{0, 0}
}

type WebKeyRSAConfig_RSAHasher int32

const (
	WebKeyRSAConfig_RSA_HASHER_UNSPECIFIED WebKeyRSAConfig_RSAHasher = 0
	WebKeyRSAConfig_RSA_HASHER_SHA256      WebKeyRSAConfig_RSAHasher = 1
	WebKeyRSAConfig_RSA_HASHER_SHA384      WebKeyRSAConfig_RSAHasher = 2
	WebKeyRSAConfig_RSA_HASHER_SHA512      WebKeyRSAConfig_RSAHasher = 3
)

// Enum value maps for WebKeyRSAConfig_RSAHasher.
var (
	WebKeyRSAConfig_RSAHasher_name = map[int32]string{
		0: "RSA_HASHER_UNSPECIFIED",
		1: "RSA_HASHER_SHA256",
		2: "RSA_HASHER_SHA384",
		3: "RSA_HASHER_SHA512",
	}
	WebKeyRSAConfig_RSAHasher_value = map[string]int32{
		"RSA_HASHER_UNSPECIFIED": 0,
		"RSA_HASHER_SHA256":      1,
		"RSA_HASHER_SHA384":      2,
		"RSA_HASHER_SHA512":      3,
	}
)

func (x WebKeyRSAConfig_RSAHasher) Enum() *WebKeyRSAConfig_RSAHasher {
	p := new(WebKeyRSAConfig_RSAHasher)
	*p = x
	return p
}

func (x WebKeyRSAConfig_RSAHasher) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebKeyRSAConfig_RSAHasher) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_resources_webkey_v3alpha_config_proto_enumTypes[1].Descriptor()
}

func (WebKeyRSAConfig_RSAHasher) Type() protoreflect.EnumType {
	return &file_zitadel_resources_webkey_v3alpha_config_proto_enumTypes[1]
}

func (x WebKeyRSAConfig_RSAHasher) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebKeyRSAConfig_RSAHasher.Descriptor instead.
func (WebKeyRSAConfig_RSAHasher) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_resources_webkey_v3alpha_config_proto_rawDescGZIP(), []int{0, 1}
}

type WebKeyECDSAConfig_ECDSACurve int32

const (
	WebKeyECDSAConfig_ECDSA_CURVE_UNSPECIFIED WebKeyECDSAConfig_ECDSACurve = 0
	WebKeyECDSAConfig_ECDSA_CURVE_P256        WebKeyECDSAConfig_ECDSACurve = 1
	WebKeyECDSAConfig_ECDSA_CURVE_P384        WebKeyECDSAConfig_ECDSACurve = 2
	WebKeyECDSAConfig_ECDSA_CURVE_P512        WebKeyECDSAConfig_ECDSACurve = 3
)

// Enum value maps for WebKeyECDSAConfig_ECDSACurve.
var (
	WebKeyECDSAConfig_ECDSACurve_name = map[int32]string{
		0: "ECDSA_CURVE_UNSPECIFIED",
		1: "ECDSA_CURVE_P256",
		2: "ECDSA_CURVE_P384",
		3: "ECDSA_CURVE_P512",
	}
	WebKeyECDSAConfig_ECDSACurve_value = map[string]int32{
		"ECDSA_CURVE_UNSPECIFIED": 0,
		"ECDSA_CURVE_P256":        1,
		"ECDSA_CURVE_P384":        2,
		"ECDSA_CURVE_P512":        3,
	}
)

func (x WebKeyECDSAConfig_ECDSACurve) Enum() *WebKeyECDSAConfig_ECDSACurve {
	p := new(WebKeyECDSAConfig_ECDSACurve)
	*p = x
	return p
}

func (x WebKeyECDSAConfig_ECDSACurve) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebKeyECDSAConfig_ECDSACurve) Descriptor() protoreflect.EnumDescriptor {
	return file_zitadel_resources_webkey_v3alpha_config_proto_enumTypes[2].Descriptor()
}

func (WebKeyECDSAConfig_ECDSACurve) Type() protoreflect.EnumType {
	return &file_zitadel_resources_webkey_v3alpha_config_proto_enumTypes[2]
}

func (x WebKeyECDSAConfig_ECDSACurve) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebKeyECDSAConfig_ECDSACurve.Descriptor instead.
func (WebKeyECDSAConfig_ECDSACurve) EnumDescriptor() ([]byte, []int) {
	return file_zitadel_resources_webkey_v3alpha_config_proto_rawDescGZIP(), []int{1, 0}
}

type WebKeyRSAConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// bit size of the RSA key
	Bits WebKeyRSAConfig_RSABits `protobuf:"varint,1,opt,name=bits,proto3,enum=zitadel.resources.webkey.v3alpha.WebKeyRSAConfig_RSABits" json:"bits,omitempty"`
	// signing algrithm used
	Hasher WebKeyRSAConfig_RSAHasher `protobuf:"varint,2,opt,name=hasher,proto3,enum=zitadel.resources.webkey.v3alpha.WebKeyRSAConfig_RSAHasher" json:"hasher,omitempty"`
}

func (x *WebKeyRSAConfig) Reset() {
	*x = WebKeyRSAConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebKeyRSAConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebKeyRSAConfig) ProtoMessage() {}

func (x *WebKeyRSAConfig) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebKeyRSAConfig.ProtoReflect.Descriptor instead.
func (*WebKeyRSAConfig) Descriptor() ([]byte, []int) {
	return file_zitadel_resources_webkey_v3alpha_config_proto_rawDescGZIP(), []int{0}
}

func (x *WebKeyRSAConfig) GetBits() WebKeyRSAConfig_RSABits {
	if x != nil {
		return x.Bits
	}
	return WebKeyRSAConfig_RSA_BITS_UNSPECIFIED
}

func (x *WebKeyRSAConfig) GetHasher() WebKeyRSAConfig_RSAHasher {
	if x != nil {
		return x.Hasher
	}
	return WebKeyRSAConfig_RSA_HASHER_UNSPECIFIED
}

type WebKeyECDSAConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Curve WebKeyECDSAConfig_ECDSACurve `protobuf:"varint,1,opt,name=curve,proto3,enum=zitadel.resources.webkey.v3alpha.WebKeyECDSAConfig_ECDSACurve" json:"curve,omitempty"`
}

func (x *WebKeyECDSAConfig) Reset() {
	*x = WebKeyECDSAConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebKeyECDSAConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebKeyECDSAConfig) ProtoMessage() {}

func (x *WebKeyECDSAConfig) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebKeyECDSAConfig.ProtoReflect.Descriptor instead.
func (*WebKeyECDSAConfig) Descriptor() ([]byte, []int) {
	return file_zitadel_resources_webkey_v3alpha_config_proto_rawDescGZIP(), []int{1}
}

func (x *WebKeyECDSAConfig) GetCurve() WebKeyECDSAConfig_ECDSACurve {
	if x != nil {
		return x.Curve
	}
	return WebKeyECDSAConfig_ECDSA_CURVE_UNSPECIFIED
}

type WebKeyED25519Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WebKeyED25519Config) Reset() {
	*x = WebKeyED25519Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebKeyED25519Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebKeyED25519Config) ProtoMessage() {}

func (x *WebKeyED25519Config) ProtoReflect() protoreflect.Message {
	mi := &file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebKeyED25519Config.ProtoReflect.Descriptor instead.
func (*WebKeyED25519Config) Descriptor() ([]byte, []int) {
	return file_zitadel_resources_webkey_v3alpha_config_proto_rawDescGZIP(), []int{2}
}

var File_zitadel_resources_webkey_v3alpha_config_proto protoreflect.FileDescriptor

var file_zitadel_resources_webkey_v3alpha_config_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x33, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x20, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x6b, 0x65, 0x79, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x03, 0x0a, 0x0f, 0x57,
	0x65, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x53, 0x41, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x59,
	0x0a, 0x04, 0x62, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x7a,
	0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x77, 0x65, 0x62, 0x6b, 0x65, 0x79, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x57, 0x65, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x53, 0x41, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x52, 0x53, 0x41, 0x42, 0x69, 0x74, 0x73, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10,
	0x01, 0x20, 0x00, 0x52, 0x04, 0x62, 0x69, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x06, 0x68, 0x61, 0x73,
	0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x7a, 0x69, 0x74, 0x61,
	0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x77, 0x65,
	0x62, 0x6b, 0x65, 0x79, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57, 0x65, 0x62,
	0x4b, 0x65, 0x79, 0x52, 0x53, 0x41, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x53, 0x41,
	0x48, 0x61, 0x73, 0x68, 0x65, 0x72, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x10, 0x01,
	0x20, 0x00, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x07, 0x52, 0x53,
	0x41, 0x42, 0x69, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x53, 0x41, 0x5f, 0x42, 0x49, 0x54,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x52, 0x53, 0x41, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x32, 0x30, 0x34, 0x38,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x53, 0x41, 0x5f, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x33,
	0x30, 0x37, 0x32, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x53, 0x41, 0x5f, 0x42, 0x49, 0x54,
	0x53, 0x5f, 0x34, 0x30, 0x39, 0x36, 0x10, 0x03, 0x22, 0x6c, 0x0a, 0x09, 0x52, 0x53, 0x41, 0x48,
	0x61, 0x73, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x53, 0x41, 0x5f, 0x48, 0x41, 0x53,
	0x48, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x53, 0x41, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x45, 0x52, 0x5f,
	0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x53, 0x41, 0x5f,
	0x48, 0x41, 0x53, 0x48, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x41, 0x33, 0x38, 0x34, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x53, 0x41, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x45, 0x52, 0x5f, 0x53, 0x48,
	0x41, 0x35, 0x31, 0x32, 0x10, 0x03, 0x22, 0xe2, 0x01, 0x0a, 0x11, 0x57, 0x65, 0x62, 0x4b, 0x65,
	0x79, 0x45, 0x43, 0x44, 0x53, 0x41, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x60, 0x0a, 0x05,
	0x63, 0x75, 0x72, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x7a, 0x69,
	0x74, 0x61, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x77, 0x65, 0x62, 0x6b, 0x65, 0x79, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57,
	0x65, 0x62, 0x4b, 0x65, 0x79, 0x45, 0x43, 0x44, 0x53, 0x41, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x45, 0x43, 0x44, 0x53, 0x41, 0x43, 0x75, 0x72, 0x76, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x05, 0x63, 0x75, 0x72, 0x76, 0x65, 0x22, 0x6b,
	0x0a, 0x0a, 0x45, 0x43, 0x44, 0x53, 0x41, 0x43, 0x75, 0x72, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x17,
	0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x43, 0x55, 0x52, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x43, 0x44,
	0x53, 0x41, 0x5f, 0x43, 0x55, 0x52, 0x56, 0x45, 0x5f, 0x50, 0x32, 0x35, 0x36, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x43, 0x55, 0x52, 0x56, 0x45, 0x5f, 0x50,
	0x33, 0x38, 0x34, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x43, 0x44, 0x53, 0x41, 0x5f, 0x43,
	0x55, 0x52, 0x56, 0x45, 0x5f, 0x50, 0x35, 0x31, 0x32, 0x10, 0x03, 0x22, 0x15, 0x0a, 0x13, 0x57,
	0x65, 0x62, 0x4b, 0x65, 0x79, 0x45, 0x44, 0x32, 0x35, 0x35, 0x31, 0x39, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x6b, 0x65, 0x79, 0x2f, 0x76, 0x33, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x3b, 0x77, 0x65, 0x62, 0x6b, 0x65, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_zitadel_resources_webkey_v3alpha_config_proto_rawDescOnce sync.Once
	file_zitadel_resources_webkey_v3alpha_config_proto_rawDescData = file_zitadel_resources_webkey_v3alpha_config_proto_rawDesc
)

func file_zitadel_resources_webkey_v3alpha_config_proto_rawDescGZIP() []byte {
	file_zitadel_resources_webkey_v3alpha_config_proto_rawDescOnce.Do(func() {
		file_zitadel_resources_webkey_v3alpha_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_zitadel_resources_webkey_v3alpha_config_proto_rawDescData)
	})
	return file_zitadel_resources_webkey_v3alpha_config_proto_rawDescData
}

var file_zitadel_resources_webkey_v3alpha_config_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_zitadel_resources_webkey_v3alpha_config_proto_goTypes = []interface{}{
	(WebKeyRSAConfig_RSABits)(0),      // 0: zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSABits
	(WebKeyRSAConfig_RSAHasher)(0),    // 1: zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSAHasher
	(WebKeyECDSAConfig_ECDSACurve)(0), // 2: zitadel.resources.webkey.v3alpha.WebKeyECDSAConfig.ECDSACurve
	(*WebKeyRSAConfig)(nil),           // 3: zitadel.resources.webkey.v3alpha.WebKeyRSAConfig
	(*WebKeyECDSAConfig)(nil),         // 4: zitadel.resources.webkey.v3alpha.WebKeyECDSAConfig
	(*WebKeyED25519Config)(nil),       // 5: zitadel.resources.webkey.v3alpha.WebKeyED25519Config
}
var file_zitadel_resources_webkey_v3alpha_config_proto_depIdxs = []int32{
	0, // 0: zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.bits:type_name -> zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSABits
	1, // 1: zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.hasher:type_name -> zitadel.resources.webkey.v3alpha.WebKeyRSAConfig.RSAHasher
	2, // 2: zitadel.resources.webkey.v3alpha.WebKeyECDSAConfig.curve:type_name -> zitadel.resources.webkey.v3alpha.WebKeyECDSAConfig.ECDSACurve
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_zitadel_resources_webkey_v3alpha_config_proto_init() }
func file_zitadel_resources_webkey_v3alpha_config_proto_init() {
	if File_zitadel_resources_webkey_v3alpha_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebKeyRSAConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebKeyECDSAConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebKeyED25519Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zitadel_resources_webkey_v3alpha_config_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zitadel_resources_webkey_v3alpha_config_proto_goTypes,
		DependencyIndexes: file_zitadel_resources_webkey_v3alpha_config_proto_depIdxs,
		EnumInfos:         file_zitadel_resources_webkey_v3alpha_config_proto_enumTypes,
		MessageInfos:      file_zitadel_resources_webkey_v3alpha_config_proto_msgTypes,
	}.Build()
	File_zitadel_resources_webkey_v3alpha_config_proto = out.File
	file_zitadel_resources_webkey_v3alpha_config_proto_rawDesc = nil
	file_zitadel_resources_webkey_v3alpha_config_proto_goTypes = nil
	file_zitadel_resources_webkey_v3alpha_config_proto_depIdxs = nil
}
